@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@utility animate-fade-in {
  animation: fadeIn 0.5s ease-out;
}

@utility sparrow-gradient {
  background: radial-gradient(
    circle at top,
    rgba(0, 0, 0, 0) 0%,
    rgba(245, 152, 144, 0.8) 35%,
    rgba(255, 138, 128, 1) 60%,
    rgba(255, 155, 145, 0.8) 80%,
    rgba(0, 0, 0, 0) 100%
  );

  overflow: hidden;

  position: relative;
  isolation: isolate;
}
.sparrow-gradient::after {
  content: "";
  padding: 50px;
  position: absolute;
  bottom: -30rem;
  left: 50%;
  width: 3200px;
  height: 2160px;
  background: #0f1729;
  /* Use mask-box-image for scaling, or use transform on a nested element for more control.
     With plain CSS mask, you can scale the second SVG by adjusting its background-size: */
  mask:
    url("/path-to-blob.svg") no-repeat center / contain,
    url("/path-to-second-blob.svg") no-repeat center 60% / 60% 60%;
  -webkit-mask:
    url("/path-to-blob.svg") no-repeat center / contain,
    url("/path-to-second-blob.svg") no-repeat center 60% / 60% 60%;
  transform: translateX(-50%);
  opacity: 0.9;
  z-index: -1;
}

@utility dashboard-gradient {
  background: linear-gradient(
    135deg,
    rgba(247, 163, 114, 0.3) 0%,
    rgba(253, 211, 184, 0.4) 25%,
    rgba(255, 138, 128, 0.5) 50%,
    rgba(245, 152, 144, 0.4) 75%,
    rgba(247, 163, 114, 0.3) 100%
  );
  
  position: relative;
  isolation: isolate;
}

.dashboard-gradient::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
    ellipse at top left,
    rgba(247, 163, 114, 0.2) 0%,
    transparent 50%
  ),
  radial-gradient(
    ellipse at bottom right,
    rgba(253, 211, 184, 0.3) 0%,
    transparent 50%
  ),
  radial-gradient(
    ellipse at center,
    rgba(255, 138, 128, 0.1) 0%,
    transparent 70%
  );
  z-index: -2;
}

.dashboard-gradient::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(45deg, transparent 30%, rgba(247, 163, 114, 0.05) 50%, transparent 70%),
    linear-gradient(-45deg, transparent 30%, rgba(253, 211, 184, 0.05) 50%, transparent 70%);
  z-index: -1;
}

@utility light-gradient {
  /* Base radial gradient */
  background: radial-gradient(circle at top, #e3d9c8 0%, #f0e9dd 100%);
  position: relative;
  isolation: isolate;
}

@layer utilities {
  :root {
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --foreground-rgb: 255, 255, 255;
      --background-start-rgb: 0, 0, 0;
      --background-end-rgb: 0, 0, 0;
    }
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 221 83% 53%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 262 83% 58%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 221 83% 53%;
    --radius: 0.75rem;
  }
  .dark {
    --background: 222 47% 11%;
    --foreground: 0 0% 98%;
    --card: 222 47% 11%;
    --card-foreground: 0 0% 98%;
    --popover: 222 47% 11%;
    --popover-foreground: 0 0% 98%;
    --primary: 217 91% 60%;
    --primary-foreground: 0 0% 98%;
    --secondary: 217 19% 27%;
    --secondary-foreground: 0 0% 98%;
    --muted: 217 19% 27%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 262 83% 58%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 217 19% 27%;
    --input: 217 19% 27%;
    --ring: 224 76% 48%;
  }
}

@layer base {
  * {
    border-color: var(--color-border);
  }
  body {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }
}

@layer components {
  .grid-background {
    position: relative;
  }

  .grid-background::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      /* Plus signs at every 4th intersection */
      url("data:image/svg+xml,%3Csvg width='120' height='120' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000' fill-opacity='0.6'%3E%3Crect x='59.5' y='51' width='1' height='18' rx='0.5'/%3E%3Crect x='51' y='59.5' width='18' height='1' rx='0.5'/%3E%3C/g%3E%3C/svg%3E"),
      /* Regular grid lines */
        linear-gradient(rgba(0, 0, 0, 0.15) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 0, 0, 0.15) 1px, transparent 1px);
    background-size:
      120px 120px,
      30px 30px,
      30px 30px;
    pointer-events: none;
    /* Oval mask in the center with smooth transition */
    mask: radial-gradient(
      ellipse 70% 50% at center,
      black 0%,
      black 40%,
      transparent 80%
    );
    -webkit-mask: radial-gradient(
      ellipse 70% 50% at center,
      black 0%,
      black 40%,
      transparent 80%
    );
  }

  .dark .grid-background::after {
    background-image: 
      /* Plus signs at every 4th intersection */
      url("data:image/svg+xml,%3Csvg width='120' height='120' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff' fill-opacity='0.4'%3E%3Crect x='59.5' y='51' width='1' height='18' rx='0.5'/%3E%3Crect x='51' y='59.5' width='18' height='1' rx='0.5'/%3E%3C/g%3E%3C/svg%3E"),
      /* Regular grid lines */
        linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
    background-size:
      120px 120px,
      30px 30px,
      30px 30px;
  }
}

@layer utilities {
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Custom responsive breakpoints */
  @screen xs {
    /* 475px and up */
  }
}

/* Custom responsive utilities */
@media (min-width: 475px) {
  .xs\:inline {
    display: inline;
  }
  .xs\:hidden {
    display: none;
  }
}